window.repositoryObject = {"parameters_custom_fields":[],"object_id":"f161","name":"public.call_insert_trigger","subtype":"FUNCTION","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"Hasura","id":"d4"}},{"field":"Schema","value":"public"},{"field":"Name","value":"call_insert_trigger"},{"field":"Type","value":"Function"}],"script":"CREATE OR REPLACE FUNCTION public.call_insert_trigger()\r\n RETURNS trigger\r\n LANGUAGE plpgsql\r\nAS $function$  \r\nDECLARE\r\n  _pos_id bigint DEFAULT NULL;\r\n  _user_id text DEFAULT NULL;\r\n  _user_name text DEFAULT NULL;\r\n  _org_structure_id uuid DEFAULT NULL;\r\nbegin  \r\n \r\n /* Если не передана торговая точка */\r\n IF new.pos_id IS NULL THEN\r\n    select id INTO _pos_id from search_phone(new.external_number::text);\r\n    new.pos_id := _pos_id;\r\n END IF; \r\n\r\n/* Если звонит сектор - привязываем его */\r\n select u.email, u.name, u.org_structure_id INTO _user_id, _user_name, _org_structure_id from public.user u where u.phone = new.external_number;\r\n IF _user_id IS NOT NULL THEN\r\n    new.sector_info := json_build_object('user_id', _user_id, 'name', _user_name, 'org_structure_id', _org_structure_id);\r\n END IF; \r\n\r\n return new;\r\nend  \r\n$function$","parameters":[{"name":"Returns","description":null,"mode":"OUT","data_type":"trigger","custom_fields":{}}],"dependencies":{"uses":[],"used_by":[]},"imported_at":"2024-02-15 12:25"};