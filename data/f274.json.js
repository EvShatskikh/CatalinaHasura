window.repositoryObject = {"parameters_custom_fields":[],"object_id":"f274","name":"public.report_issue","subtype":"FUNCTION","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"Hasura","id":"d4"}},{"field":"Schema","value":"public"},{"field":"Name","value":"report_issue"},{"field":"Type","value":"Function"}],"script":"CREATE OR REPLACE FUNCTION public.report_issue(datefrom timestamp with time zone DEFAULT NULL::timestamp with time zone, dateto timestamp with time zone DEFAULT NULL::timestamp with time zone, users text DEFAULT NULL::text)\r\n RETURNS SETOF view_report_issue\r\n LANGUAGE plpgsql\r\n STABLE\r\nAS $function$\r\nDECLARE\r\n  select_query text;\r\nBEGIN\r\n\r\n  select_query := '\r\n    SELECT\r\n      q1.org_structure::text,\r\n      q1.planned::text,\r\n      q1.not_planned::text,\r\n      (q1.planned + q1.not_planned)::text as all_issues,\r\n      q1.completed_planned::text,\r\n      q1.completed_not_planned::text,\r\n      q1.inprogress::text,\r\n      (q1.completed_planned + q1.completed_not_planned)::text as all_completed,\r\n      q2.orders::text,\r\n      q2.product_dal::text,\r\n      COALESCE(q3.completed_issues_with_orders, 0)::text as completed_issues_with_orders\r\n    FROM\r\n      (\r\n        SELECT\r\n          (CASE WHEN (issue.order_by IS NOT NULL) THEN issue.order_by ELSE issue.start_by_org_structure END ) as org_structure,\r\n          SUM( CASE WHEN (issue.route_id IS NOT NULL) THEN 1 ELSE 0 END ) AS planned,\r\n          SUM( CASE WHEN (issue.route_id IS NULL) THEN 1 ELSE 0 END ) AS not_planned,\r\n          SUM( CASE WHEN (issue.route_id IS NOT NULL AND issue.completed_at IS NOT NULL) THEN 1 ELSE 0 END) AS completed_planned,\r\n          SUM( CASE WHEN (issue.route_id IS NULL AND issue.completed_at IS NOT NULL) THEN 1 ELSE 0 END) AS completed_not_planned,\r\n          SUM( CASE WHEN (issue.completed_at IS NULL AND issue.start_at IS NOT NULL) THEN 1  ELSE 0 END ) AS inprogress\r\n        FROM issue\r\n        WHERE issue.start_at IS NOT NULL ';\r\n\r\n  /* ограничение по дате ОТ */\r\n  IF datefrom IS NOT NULL THEN\r\n    select_query := select_query || ' AND issue.created_at >= ' || quote_literal(datefrom);\r\n  END IF;\r\n\r\n  /* ограничение по дате ДО */\r\n  IF dateto IS NOT NULL THEN\r\n    select_query := select_query || ' AND issue.created_at <= ' || quote_literal(dateto);\r\n  END IF;\r\n\r\n  /* выборка по оргструктуре */\r\n  IF users IS NOT NULL THEN\r\n    select_query := select_query || ' AND ((issue.order_by IS NOT NULL AND issue.order_by IN (' || users || ')) OR (issue.order_by IS NULL AND issue.start_by_org_structure IN (' || users || ')))';\r\n  ELSE\r\n    select_query := select_query || ' AND FALSE';\r\n  END IF;\r\n\r\n  select_query := select_query ||\r\n      'GROUP BY org_structure\r\n    ) as q1\r\n\r\n  LEFT JOIN (\r\n    SELECT\r\n      \"order\".\"order\".org_structure_id::text as org_structure\r\n      , COUNT(distinct \"order\".\"order\".id) as orders\r\n      , SUM(\"order\".\"product\".product_dal) as product_dal\r\n\r\n    FROM \"order\".\"order\"\r\n    LEFT JOIN \"order\".\"product\" ON \"order\".\"product\".order_id = \"order\".\"order\".id\r\n    LEFT JOIN issue ON \"order\".\"order\".issue_id = issue.id\r\n\r\n    WHERE issue.start_at IS NOT NULL ';\r\n\r\n  /* ограничение по дате ОТ */\r\n  IF datefrom IS NOT NULL THEN\r\n    select_query := select_query || ' AND issue.created_at >= ' || quote_literal(datefrom);\r\n  END IF;\r\n\r\n  /* ограничение по дате ДО */\r\n  IF dateto IS NOT NULL THEN\r\n    select_query := select_query || ' AND issue.created_at <= ' || quote_literal(dateto);\r\n  END IF;\r\n\r\n  /* выборка по оргструктуре */\r\n  IF users IS NOT NULL THEN\r\n    select_query := select_query || '\r\n          AND issue.order_by IN (' || users || ')';\r\n  END IF;\r\n\r\n  select_query := select_query ||\r\n    'GROUP BY org_structure\r\n  ) as q2\r\n  ON q1.org_structure = q2.org_structure\r\n\r\n  LEFT JOIN (\r\n    SELECT issue.order_by as org_structure,\r\n      COUNT(*) as completed_issues_with_orders\r\n    FROM issue\r\n    WHERE issue.completed_at IS NOT NULL\r\n      AND (SELECT COUNT(*) FROM \"order\".\"order\" WHERE \"order\".\"order\".issue_id = issue.id) > 0 ';\r\n\r\n    /* ограничение по дате ОТ */\r\n    IF datefrom IS NOT NULL THEN\r\n      select_query := select_query || ' AND issue.created_at >= ' || quote_literal(datefrom);\r\n    END IF;\r\n\r\n    /* ограничение по дате ДО */\r\n    IF dateto IS NOT NULL THEN\r\n      select_query := select_query || ' AND issue.created_at <= ' || quote_literal(dateto);\r\n    END IF;\r\n\r\n    /* выборка по оргструктуре */\r\n    IF users IS NOT NULL THEN\r\n      select_query := select_query || '\r\n        AND issue.order_by IN (' || users || ')';\r\n    END IF;\r\n\r\n  select_query := select_query ||\r\n    'GROUP BY org_structure\r\n  ) as q3\r\n  ON q1.org_structure = q3.org_structure';\r\n\r\n  RETURN QUERY EXECUTE select_query;\r\nEND\r\n$function$","parameters":[{"name":"Returns","description":null,"mode":"OUT","data_type":"view_report_issue","custom_fields":{}},{"name":"datefrom","description":null,"mode":"IN","data_type":"timestamp with time zone","custom_fields":{}},{"name":"dateto","description":null,"mode":"IN","data_type":"timestamp with time zone","custom_fields":{}},{"name":"users","description":null,"mode":"IN","data_type":"text","custom_fields":{}}],"dependencies":null,"imported_at":"2023-11-29 12:21"};