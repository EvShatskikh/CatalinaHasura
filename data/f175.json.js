window.repositoryObject = {"parameters_custom_fields":[],"object_id":"f175","name":"public.export_search_matrix","subtype":"FUNCTION","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"Hasura","id":"d4"}},{"field":"Schema","value":"public"},{"field":"Name","value":"export_search_matrix"},{"field":"Type","value":"Function"}],"script":"CREATE OR REPLACE FUNCTION public.export_search_matrix(_month integer, _region text DEFAULT NULL::text, _search text DEFAULT NULL::text, _id integer DEFAULT NULL::integer, _is_auto boolean DEFAULT NULL::boolean, _created_by text DEFAULT NULL::text, _without_pos boolean DEFAULT NULL::boolean, _info_filters text DEFAULT NULL::text, _path_filters text DEFAULT NULL::text)\r\n RETURNS SETOF return_jsonb_f\r\n LANGUAGE plpgsql\r\n STABLE\r\nAS $function$\r\n\r\nBEGIN\r\n    RETURN QUERY\r\n    SELECT jsonb_build_object(\r\n    'id', id::text,\r\n    'name', name::text,\r\n    'isAuto', CASE WHEN is_auto=true THEN '+' ELSE '' END,\r\n\r\n    'createdAt', concat_ws(' ', created_by::text, to_char(created_at, ' DD.MM.YYYY HH24:MI')),\r\n    'updatedAt', concat_ws(' ', updated_by::text, to_char(updated_at, 'DD.MM.YYYY HH24:MI')),\r\n\r\n    'countPos', (SELECT NULLIF(count(*), '0') FROM  matrix_m2m_pos AS m2p WHERE m2p.matrix_id=id)::text,\r\n    'countSku', (SELECT NULLIF(count(*), '0') FROM  matrix_m2m_sku AS m2s WHERE m2s.matrix_id=id )::text,\r\n\r\n    'channel', CASE WHEN jsonb_array_length(auto_filters::jsonb->'type') > 0\r\n      THEN (\r\n        SELECT string_agg(concat_ws(' / ', value->>'channel', value->>'olType', value->>'olSubType'), ', ')\r\n          FROM jsonb_array_elements(auto_filters::jsonb->'type')\r\n        )\r\n      ELSE '' END,\r\n\r\n    'chain', CASE WHEN jsonb_array_length(auto_filters::jsonb->'chain') > 0\r\n      THEN (\r\n        SELECT string_agg(concat_ws(' / ', value->>'networkName', value->>'subNetworkName', value->>'externalNetwork'), ', ')\r\n          FROM jsonb_array_elements(auto_filters::jsonb->'chain')\r\n        )\r\n      ELSE '' END,\r\n\r\n    'geography', CASE WHEN jsonb_array_length(auto_filters::jsonb->'geography') > 0\r\n      THEN (\r\n        SELECT string_agg(concat_ws(' / ', value->>'region', value->>'province', value->>'city'), ', ')\r\n          FROM jsonb_array_elements(auto_filters::jsonb->'geography')\r\n        )\r\n      ELSE '' END,\r\n\r\n    'territory', CASE WHEN jsonb_array_length(auto_filters::jsonb->'territory') > 0\r\n      THEN (\r\n        SELECT string_agg(concat_ws(' / ', value->>'m4', value->>'m3', value->>'m2', value->>'m1'), ', ')\r\n          FROM jsonb_array_elements(auto_filters::jsonb->'territory')\r\n        )\r\n      ELSE '' END,\r\n\r\n      'doors', REPLACE(REPLACE(concat_ws(' ', (auto_filters->'door')::text),'[',''),']','')\r\n    ) as value\r\n    FROM search_matrix(_month, _region, _search, _id, _is_auto, _created_by, _without_pos, _info_filters, _path_filters);\r\nEND\r\n$function$","parameters":[{"name":"Returns","description":null,"mode":"OUT","data_type":"return_jsonb_f","custom_fields":{}},{"name":"_month","description":null,"mode":"IN","data_type":"integer","custom_fields":{}},{"name":"_region","description":null,"mode":"IN","data_type":"text","custom_fields":{}},{"name":"_search","description":null,"mode":"IN","data_type":"text","custom_fields":{}},{"name":"_id","description":null,"mode":"IN","data_type":"integer","custom_fields":{}},{"name":"_is_auto","description":null,"mode":"IN","data_type":"boolean","custom_fields":{}},{"name":"_created_by","description":null,"mode":"IN","data_type":"text","custom_fields":{}},{"name":"_without_pos","description":null,"mode":"IN","data_type":"boolean","custom_fields":{}},{"name":"_info_filters","description":null,"mode":"IN","data_type":"text","custom_fields":{}},{"name":"_path_filters","description":null,"mode":"IN","data_type":"text","custom_fields":{}}],"dependencies":null,"imported_at":"2023-11-29 12:21"};