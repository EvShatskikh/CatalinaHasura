window.repositoryObject = {"parameters_custom_fields":[],"object_id":"f162","name":"public.call_route_upsert_trigger","subtype":"FUNCTION","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"Hasura","id":"d4"}},{"field":"Schema","value":"public"},{"field":"Name","value":"call_route_upsert_trigger"},{"field":"Type","value":"Function"}],"script":"CREATE OR REPLACE FUNCTION public.call_route_upsert_trigger()\r\n RETURNS trigger\r\n LANGUAGE plpgsql\r\nAS $function$  \r\nDECLARE\r\n  m3_name text;\r\n  m1_ids uuid[];  \r\nbegin  \r\n  /* Получаем имя М3 для поиска его М1 */\r\n  SELECT name INTO m3_name FROM org_structure WHERE id = new.org_structure_id;\r\n  IF \tchar_length(m3_name) > 0 THEN\r\n    m3_name := '%/' || m3_name || '/%';\r\n    m1_ids := ARRAY(SELECT id FROM org_structure WHERE hierlevel = 1 AND path LIKE (m3_name));\r\n\r\n    IF array_length(m1_ids, 1) > 0 THEN\r\n      UPDATE pos SET provider_id = new.provider_id\r\n      WHERE org_structure_id = ANY(m1_ids) AND COALESCE(provider_id, 0) != COALESCE(new.provider_id, 0);\r\n    END IF;\r\n  END IF;\r\n\r\n  return new;\r\nend  \r\n$function$","parameters":[{"name":"Returns","description":null,"mode":"OUT","data_type":"trigger","custom_fields":{}}],"dependencies":{"uses":[],"used_by":[]},"imported_at":"2024-02-15 12:25"};