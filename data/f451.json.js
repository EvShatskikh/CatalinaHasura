window.repositoryObject = {"parameters_custom_fields":[],"object_id":"f451","name":"public.f_set_child_issue_status","subtype":"FUNCTION","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"Hasura","id":"d4"}},{"field":"Schema","value":"public"},{"field":"Name","value":"f_set_child_issue_status"},{"field":"Type","value":"Function"}],"script":"CREATE OR REPLACE FUNCTION public.f_set_child_issue_status()\r\n RETURNS trigger\r\n LANGUAGE plpgsql\r\nAS $function$  \r\nBEGIN\r\n    IF((TG_OP = 'INSERT' OR NEW.completed_at IS DISTINCT FROM OLD.completed_at) AND NEW.info->'parentIssueId' IS NOT NULL) THEN\r\n        -- пишемо статус дочірнього запиту до материнського запиту\r\n        UPDATE public.issue SET info = COALESCE(info, '{}') || \r\n            jsonb_build_object('childIssues', COALESCE(info->'childIssues','{}') || jsonb_build_object(NEW.id, NEW.completed_at IS NOT NULL))\r\n        WHERE id = (NEW.info->'parentIssueId')::int;\r\n    END IF;\r\n  \r\n  RETURN NEW;\r\nEND  \r\n$function$","parameters":[{"name":"Returns","description":null,"mode":"OUT","data_type":"trigger","custom_fields":{}}],"dependencies":{"uses":[],"used_by":[]},"imported_at":"2024-02-15 12:25"};