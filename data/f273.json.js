window.repositoryObject = {"parameters_custom_fields":[],"object_id":"f273","name":"public.report_da","subtype":"FUNCTION","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"Hasura","id":"d4"}},{"field":"Schema","value":"public"},{"field":"Name","value":"report_da"},{"field":"Type","value":"Function"}],"script":"CREATE OR REPLACE FUNCTION public.report_da(datefrom timestamp with time zone, dateto timestamp with time zone, users text DEFAULT NULL::text)\r\n RETURNS SETOF view_report_da\r\n LANGUAGE plpgsql\r\n STABLE\r\nAS $function$\r\nDECLARE\r\n  select_query text;\r\n\r\nBEGIN select_query := '\r\n  SELECT \r\n    o_pos.path_info->>''m4''::text as m4\r\n    , o_pos.path_info->>''m3''::text as m3\r\n    , o_pos.path_info->>''m2''::text as m2\r\n    , o_pos.path_info->>''m1''::text as sector\r\n    , o_user.path_info->>''m2''::text as t2\r\n    , u.name::text as da\r\n    , i.created_at::text as created_date\r\n    , p.id::text as ol_code\r\n    , p.trading_name::text as trading_name\r\n    , p.address::text as address\r\n    , i.id::text as issue_number\r\n    , ( CASE WHEN (i.route_id IS NOT NULL) THEN ''1'' ELSE '''' END )::text as route\r\n    , (SELECT array_to_string(array(\r\n        SELECT call.external_number from issue_event\r\n          LEFT JOIN call \r\n          ON call.id = CAST(issue_event.data->>''call'' as int)\r\n        WHERE issue_event.action = ''call'' and issue_event.issue_id = i.id\r\n        GROUP BY call.external_number\r\n      ), '', ''))::text as phones\r\n    , i.start_at::text as time_start\r\n    , i.completed_at::text as time_end\r\n    , ( CASE WHEN i.start_at IS NULL AND i.completed_at IS NULL THEN ''Открыт''\r\n        WHEN i.start_at IS NOT NULL AND i.completed_at IS NULL  THEN ''В процессе''\r\n        WHEN i.completed_at IS NOT NULL THEN ''Выполнен'' ELSE '''' END )::text as status\r\n    \r\n    , i.order_status::text as reason\r\n    , (SELECT array_to_string(array(SELECT swe_id from \"order\".order o WHERE o.issue_id = i.id),'', ''))::text as order_ids\r\n    , (SELECT SUM(p.product_dal) FROM \"order\".order o\r\n        LEFT JOIN \"order\".product p ON p.order_id = o.id\r\n        WHERE o.issue_id = i.id)::text as dal\r\n    , (SELECT SUM(p.total) FROM \"order\".order o\r\n        LEFT JOIN \"order\".product p ON p.order_id = o.id\r\n        WHERE o.issue_id = i.id)::text as total\r\n    \r\n  FROM issue i\r\n    LEFT JOIN pos p on p.id = i.pos_id\r\n    LEFT JOIN public.user u on u.email = i.assigned_user_id\r\n    LEFT JOIN org_structure o_user on o_user.id = u.org_structure_id\r\n    LEFT JOIN org_structure o_pos on o_pos.id = p.org_structure_id\r\n  WHERE i.is_active = true';\r\n  \r\n    select_query := select_query || ' AND i.created_at >= ' || quote_literal(datefrom);\r\n    select_query := select_query || ' AND i.created_at <= ' || quote_literal(dateto);\r\n\r\n  IF users IS NOT NULL THEN\r\n    select_query := select_query || ' AND u.org_structure_id IN(' || users || ')' ;\r\n  ELSE \r\n    /* не вертаємо нічого якщо не передані співробітники */\r\n    select_query := select_query || ' AND FALSE';\r\n  END IF;\r\n\r\n  RETURN QUERY EXECUTE select_query;\r\nEND\r\n$function$","parameters":[{"name":"Returns","description":null,"mode":"OUT","data_type":"view_report_da","custom_fields":{}},{"name":"datefrom","description":null,"mode":"IN","data_type":"timestamp with time zone","custom_fields":{}},{"name":"dateto","description":null,"mode":"IN","data_type":"timestamp with time zone","custom_fields":{}},{"name":"users","description":null,"mode":"IN","data_type":"text","custom_fields":{}}],"dependencies":{"uses":[],"used_by":[]},"imported_at":"2024-02-15 12:25"};