window.repositoryObject = {"parameters_custom_fields":[],"object_id":"f267","name":"public.pos_upsert_trigger","subtype":"FUNCTION","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"Hasura","id":"d4"}},{"field":"Schema","value":"public"},{"field":"Name","value":"pos_upsert_trigger"},{"field":"Type","value":"Function"}],"script":"CREATE OR REPLACE FUNCTION public.pos_upsert_trigger()\r\n RETURNS trigger\r\n LANGUAGE plpgsql\r\nAS $function$\r\nDECLARE\r\n  fts tsvector;\r\n  phones text[] default array[]::text[];\r\n  contact_phone text;\r\n  random_uuid uuid;\r\n  sector_name text;\r\n  new_hash text;\r\n  old_hash text;\r\nbegin\r\n  /* Код точки завжди в індексі */\r\n  fts := to_tsvector('simple', abs(new.id)::varchar(25));\r\n\r\n\r\n  /* Пошук по тексту та телефонам тільки для активних ТТ */\r\n  IF new.is_active = true THEN\r\n   fts := fts || to_tsvector('russian', new.name ||' '||  COALESCE(new.address, '') ||' '||  COALESCE(new.trading_name, '') ||' '||  regexp_replace(regexp_replace(COALESCE(new.address, ''), '\\D',' ','g'), '( ){2,}',' ','g'));\r\n\r\n    /* Внешний код точки */\r\n    IF new.info IS NOT NULL AND new.info->>'olCode' IS NOT NULL THEN\r\n      fts := fts || to_tsvector('simple', new.info->>'olCode');\r\n    END IF;\r\n\r\n    /* ТС точки */\r\n    IF new.info IS NOT NULL AND new.info->>'ts' IS NOT NULL THEN\r\n      fts := fts || to_tsvector('russian', new.info->>'ts');\r\n    END IF;\r\n\r\n    /* Сектор точки */\r\n    SELECT org_structure.name INTO sector_name FROM org_structure WHERE id = new.org_structure_id;\r\n    IF sector_name IS NOT NULL THEN\r\n      fts := fts || to_tsvector('russian', sector_name);\r\n    END IF;\r\n\r\n    /* НАШИ КОНТАКТЫ - собираем для индекса + \"неправильный\" формат */\r\n    FOR contact_phone IN SELECT value->>'phone' FROM jsonb_each(new.contacts)\r\n    LOOP\r\n      IF contact_phone IS NOT NULL THEN\r\n        phones := array_append(phones, contact_phone);\r\n        phones := array_append(phones, public.pos_phone_format_reverse(contact_phone));\r\n      END IF;\r\n    END LOOP;\r\n\r\n    /* SWE КОНТАКТЫ - собираем для индекса + \"неправильный\" формат */\r\n    FOR contact_phone IN SELECT value->>'phone' FROM jsonb_each(new.swe_contacts)\r\n    LOOP\r\n      IF contact_phone IS NOT NULL THEN\r\n        phones := array_append(phones, contact_phone);\r\n        phones := array_append(phones, public.pos_phone_format_reverse(contact_phone));\r\n      END IF;\r\n    END LOOP;\r\n\r\n    /* Добавляем телефоны в индекс */\r\n    IF array_length(phones, 1) > 0 THEN\r\n      /* в телефонный tsvector */\r\n      new.fts_phone := array_to_tsvector(phones);\r\n\r\n      /* в общий tsvector */\r\n      FOREACH contact_phone IN ARRAY phones\r\n      LOOP\r\n        fts := fts || to_tsvector('simple', contact_phone::text);\r\n      END LOOP;\r\n    ELSE\r\n      new.fts_phone := null;\r\n    END IF;\r\n\r\n    /* Обновляем provider_id по точке для перенаправления звонков */\r\n    random_uuid := gen_random_uuid();\r\n    IF COALESCE(old.org_structure_id, random_uuid) != COALESCE(new.org_structure_id, random_uuid) OR new.provider_id IS NULL THEN\r\n      SELECT c.provider_id INTO new.provider_id\r\n      FROM call_route c\r\n      INNER JOIN org_structure o ON o.id = c.org_structure_id\r\n      WHERE o.name = (SELECT split_part(path, '/', 4) FROM org_structure WHERE id = new.org_structure_id );\r\n    END IF;\r\n\r\n    /* помечаем точки для матриц  - разрешенные каналы 1,2,3,4,5,7 */\r\n    IF new.for_matrix = FALSE AND new.info->>'channelId' IN ('1','2','3','4','5','7') AND regexp_match(new.info->>'region', '^[0-9]*_') IS NOT NULL THEN\r\n      new.for_matrix = TRUE;\r\n      /* убираем точки для матриц */\r\n    ELSIF new.for_matrix = TRUE AND (new.info->>'channelId' NOT IN ('1','2','3','4','5','7') OR regexp_match(new.info->>'region', '^[0-9]*_') IS NULL)THEN\r\n      new.for_matrix = FALSE;\r\n    END IF;\r\n  ELSE\r\n    new.fts_phone := null;\r\n    /* убираем точки для матриц */\r\n    IF new.for_matrix = TRUE THEN\r\n      new.for_matrix = FALSE;\r\n    END IF;\r\n  END IF;\r\n\r\n  new.fts_col := fts;\r\n\r\n  /* страна */\r\n  IF new.region IS NULL OR old.server != new.server THEN\r\n    IF new.server != '' THEN\r\n      new.region := CASE WHEN new.server ILIKE '%sw_central_siu%' THEN 'ua' ELSE 'ru' END;\r\n    ELSE\r\n      new.region := CASE WHEN new.info->>'region' ILIKE '%_UA_%' THEN 'ua' ELSE 'ru' END;\r\n    END IF;\r\n  END IF;\r\n\r\n  /* якщо оновились дані необхідні для розрахунку суб'єктних прив'язок - змінюємо subject_updated_at */\r\n  IF new.info IS DISTINCT FROM old.info OR new.warehouses IS DISTINCT FROM old.warehouses OR new.org_structure_id IS DISTINCT FROM old.org_structure_id THEN\r\n\r\n    new_hash := md5(\r\n      COALESCE(new.info->>'tsId','') ||\r\n      COALESCE(new.info->>'channelId','') ||\r\n      COALESCE(new.info->>'olSubTypeId','') ||\r\n      COALESCE(new.info->>'altTypes','')  ||\r\n      COALESCE(new.info->>'networkId','')  ||\r\n      COALESCE(new.org_structure_id::text,'') ||\r\n      COALESCE(new.warehouses::text,'')) ;\r\n\r\n    old_hash := md5(\r\n      COALESCE(old.info->>'tsId','')  ||\r\n      COALESCE(old.info->>'channelId','') ||\r\n      COALESCE(old.info->>'olSubTypeId','') ||\r\n      COALESCE(old.info->>'altTypes','')  ||\r\n      COALESCE(old.info->>'networkId','') ||\r\n      COALESCE(old.org_structure_id::text,'') ||\r\n      COALESCE(old.warehouses::text,'')) ;\r\n\r\n    IF new_hash != old_hash THEN\r\n      new.subject_updated_at := now();\r\n    END IF;\r\n  END IF;\r\n\r\n  return new;\r\nend\r\n$function$","parameters":[{"name":"Returns","description":null,"mode":"OUT","data_type":"trigger","custom_fields":{}}],"dependencies":{"uses":[],"used_by":[]},"imported_at":"2024-02-15 12:25"};