window.repositoryObject = {"parameters_custom_fields":[],"object_id":"f228","name":"public.issue_upsert_trigger","subtype":"FUNCTION","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"Hasura","id":"d4"}},{"field":"Schema","value":"public"},{"field":"Name","value":"issue_upsert_trigger"},{"field":"Type","value":"Function"}],"script":"CREATE OR REPLACE FUNCTION public.issue_upsert_trigger()\r\n RETURNS trigger\r\n LANGUAGE plpgsql\r\nAS $function$  \r\nDECLARE\r\n  pos_count int DEFAULT 0;\r\n  pos_id bigint DEFAULT 0;\r\n  fts tsvector;\r\n  pos_info text DEFAULT '';\r\n  pos_ts text DEFAULT '';\r\n  _sw_id bigint DEFAULT null;\r\n  _cust_id integer DEFAULT 0;\r\nbegin  \r\n\r\n  /* добавляем title в fts */\r\n  IF old.title IS NULL OR new.title != old.title THEN\r\n    fts := to_tsvector('russian', new.title) || to_tsvector('simple', new.id::text);   \r\n    new.fts := fts;\r\n  END IF;\r\n\r\n  /* Если по запросу установлена привязка к контакту (pos_phone) */\r\n  IF new.pos_phone IS NOT NULL AND new.pos_phone != COALESCE(old.pos_phone,0) THEN\r\n\r\n    /* считаем кол-во точек по данному контакту */\r\n    select count(id), max(id) INTO pos_count, pos_id from search_phone(new.pos_phone::text, 2);\r\n\r\n    /* если у контакта только одна точка - меняем привязку pos_phone на привязку к pos_id */\r\n    IF pos_count = 1 AND pos_id IS NOT NULL THEN\r\n      new.pos_phone := NULL;\r\n      new.pos_id := pos_id;\r\n\r\n    /* если по контакту точки не найдены - ставим NULL для pos_phone */\r\n    ELSIF pos_count = 0 THEN\r\n      new.pos_phone := NULL;\r\n    END IF;  \r\n  END IF;  \r\n\r\n  /* формируем поле pos_info с названием и адресом ТТ (для поиска по like) */\r\n  IF COALESCE(new.pos_id,0) != COALESCE(old.pos_id,0) THEN\r\n    IF new.pos_id IS NOT NULL THEN\r\n      SELECT trading_name || ' ' || name ' ' || address, info->'tsId' INTO pos_info, pos_ts FROM pos WHERE id = new.pos_id;\r\n      new.pos_info := pos_info;\r\n\r\n      /* формируем swe_id для визита */\r\n      -- sw_id 15 символов, первая цифра 9 - atlas, 3- catalina\r\n      -- sw_id 7й символ - 1\r\n      IF NEW.origin LIKE 'visit_%' \r\n        THEN _sw_id := 900000100000000;\r\n        ELSE _sw_id := 300000100000000;\r\n      END IF;\r\n      -- 2-5 символ  cust_id с ведущими нулями\r\n      IF  pos_ts IS NOT NULL THEN _cust_id :=  pos_ts::integer; END IF;\r\n      _sw_id := _sw_id + (_cust_id * 10000000000);\r\n      -- последние 8 символов = ид issue\r\n      _sw_id := _sw_id + NEW.id;\r\n      new.swe_id := _sw_id;\r\n\r\n    ELSE\r\n      new.pos_info := '';\r\n      new.swe_id := null;\r\n    END IF;\r\n  END IF;\r\n\r\n  return new;\r\nend  \r\n$function$","parameters":[{"name":"Returns","description":null,"mode":"OUT","data_type":"trigger","custom_fields":{}}],"dependencies":{"uses":[],"used_by":[]},"imported_at":"2024-02-15 12:25"};