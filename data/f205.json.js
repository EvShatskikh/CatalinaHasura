window.repositoryObject = {"parameters_custom_fields":[],"object_id":"f205","name":"public.get_user","subtype":"FUNCTION","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"Hasura","id":"d4"}},{"field":"Schema","value":"public"},{"field":"Name","value":"get_user"},{"field":"Type","value":"Function"}],"script":"CREATE OR REPLACE FUNCTION public.get_user(hasura_session json, _users text DEFAULT NULL::text)\r\n RETURNS SETOF \"user\"\r\n LANGUAGE plpgsql\r\n STABLE\r\nAS $function$\r\nDECLARE\r\n  acl_groups text[];\r\n  users_array text[] DEFAULT NULL;\r\nBEGIN\r\n    SELECT array(SELECT name FROM get_user_group(hasura_session)) INTO acl_groups;\r\n\r\n    /* если у пользователя нет групп - возвращаем только его */\r\n    IF array_length(acl_groups, 1) = 0 IS NULL THEN\r\n      RETURN QUERY SELECT u.* FROM public.user u WHERE u.email = (hasura_session->>'x-hasura-user-id')::text;\r\n\r\n    /* все пользователи по разрешенным группам */\r\n    ELSIF _users IS NULL THEN\r\n\r\n      RETURN QUERY SELECT u.* FROM public.user u\r\n      WHERE EXISTS (SELECT * FROM user_m2m_group ug WHERE ug.user_id = u.email AND ug.group_id = ANY (acl_groups));\r\n\r\n    /* если фильтр по пользователям - выбираем все разрешенные из фильтра */\r\n    ELSE\r\n      users_array := string_to_array(_users, '|')::text[];\r\n\r\n      RETURN QUERY SELECT u.* FROM public.user u\r\n      WHERE u.email = ANY(users_array) AND EXISTS (SELECT * FROM user_m2m_group ug WHERE ug.user_id = u.email AND ug.group_id = ANY (acl_groups));\r\n    END IF;\r\nEND\r\n$function$","parameters":[{"name":"Returns","description":null,"mode":"OUT","data_type":"user","custom_fields":{}},{"name":"hasura_session","description":null,"mode":"IN","data_type":"json","custom_fields":{}},{"name":"_users","description":null,"mode":"IN","data_type":"text","custom_fields":{}}],"dependencies":{"uses":[],"used_by":[]},"imported_at":"2024-02-15 12:25"};