window.repositoryObject = {"parameters_custom_fields":[],"object_id":"f164","name":"public.copy_matrix_contract_history","subtype":"FUNCTION","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"Hasura","id":"d4"}},{"field":"Schema","value":"public"},{"field":"Name","value":"copy_matrix_contract_history"},{"field":"Type","value":"Function"}],"script":"CREATE OR REPLACE FUNCTION public.copy_matrix_contract_history(_month_id integer)\r\n RETURNS SETOF return_int_f\r\n LANGUAGE plpgsql\r\nAS $function$\r\nDECLARE\r\n  _sync_date TEXT DEFAULT now()::text;\r\n  _last_sync timestamptz DEFAULT now();\r\nBEGIN\r\n\r\n/* дата последнего обновления истории */\r\nselect value->>'sync' into _last_sync from config where key = 'matrix_contract_history';\r\n\r\n/* временная таблица для последних исторических данных за месяц */\r\nCREATE TEMPORARY TABLE temp_history (\r\n    kpi_id integer NOT NULL,\r\n    pos_id bigint NOT NULL,\r\n    value text NOT NULL\r\n);\r\n/* индекс для быстрого поиска по временной таблице */\r\nCREATE UNIQUE INDEX idx_temp_history ON temp_history (kpi_id, pos_id, value);\r\n\r\n/* заполняем временную таблицу последними историческими значениями за месяц*/\r\ninsert into temp_history (kpi_id, pos_id, value)\r\nselect distinct on (kpi_id, pos_id) kpi_id, pos_id, value\r\nfrom matrix_contract_history \r\nwhere month_id = _month_id\r\norder by kpi_id, pos_id, updated_at desc;\r\n\r\n/* копируем в историю измененные значения по КПИ (после даты последней синхронизации) */\r\ninsert into matrix_contract_history (kpi_id, kpi_name, value, pos_id, month_id, region, updated_at )\r\nselect kpi_id, k.name as kpi_name, value, pos_id, _month_id as month_id, region, v.updated_at\r\n  from matrix_contract_value v\r\n  JOIN matrix_contract_kpi k ON k.id = v.kpi_id\r\n  and not exists (select * from temp_history t where t.kpi_id = v.kpi_id and t.pos_id = v.pos_id and t.value = v.value);\r\n\r\n-- /* копируем в историю измененные значения по Количеству SKU в матрицах */\r\n-- insert into matrix_contract_history (kpi_id, kpi_name, value, pos_id, month_id, region, updated_at )\r\n-- select k.id as kpi_id, k.name as kpi_name, count(sku_id) as value, p.pos_id as pos_id, _month_id as month_id, k.region, now() as updated_at\r\n--   from matrix m\r\n--   join matrix_m2m_pos p on p.matrix_id = m.id\r\n--   join matrix_m2m_sku s on s.matrix_id = m.id\r\n--   join matrix_contract_kpi k on m.region = k.region and k.id in (1,2)\r\n--   where m.month = _month_id\r\n--   group by p.pos_id, k.id\r\n--   having not exists (select * from temp_history t where t.kpi_id = k.id and t.pos_id = p.pos_id and t.value = (count(sku_id))::text);\r\n\r\n/* обновляем дату последней синхронизации */\r\nupdate config set value = ('{\"sync\": \"' || _sync_date || '\"}')::jsonb where key = 'matrix_contract_history';\r\n\r\n/* возвращаем кол-во записей в истории за месяц */\r\nRETURN QUERY SELECT count(*)::bigint FROM matrix_contract_history WHERE month_id = _month_id;\r\n\r\nEND\r\n$function$","parameters":[{"name":"Returns","description":null,"mode":"OUT","data_type":"return_int_f","custom_fields":{}},{"name":"_month_id","description":null,"mode":"IN","data_type":"integer","custom_fields":{}}],"dependencies":{"uses":[],"used_by":[]},"imported_at":"2024-02-15 12:25"};